generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String?  // Nullable for users signing in with Google
  country   Country  @relation(fields: [countryId], references: [id])
  countryId String
  cards     Card[]

  accounts  Account[] // Support for Google sign-in
  sessions  Session[]
}

model Card {
  id          String   @id @default(cuid())
  content     String
  creator     User      @relation(fields: [creatorId], references: [id])
  creatorId   String
  country     Country   @relation(fields: [countryId], references: [id])
  countryId   String
  likes       Int       @default(0)
  reports     Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?

  positionX   Float     @default(0.0) // X-axis position for the card
  positionY   Float     @default(0.0) // Y-axis position for the card
}

model Country {
  id     String  @id @default(cuid())
  name   String  @unique
  code   String  @unique
  users  User[]
  cards  Card[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  user               User    @relation(fields: [userId], references: [id])
  provider           String
  providerAccountId  String
  type               String
  access_token       String?
  refresh_token      String?
  expires_at         Int?
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}


model Category {
  id    String @id @default(cuid())
  name  String @unique
  cards Card[]
}

model Visitor {
  id        String   @id @default(cuid())
  sessionId String   @unique
  createdAt DateTime @default(now())
}